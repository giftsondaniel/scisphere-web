
[uwsgi]
#home=/opt/virtualenvironment/origa-env
home=/opt/virtual_environments/scisphere-env
chdir = /opt/scisphere/prod/scisphere-web
wsgi-file = /opt/scisphere/prod/scisphere-web/wsgi.py
static-map = /static=/opt/scisphere/prod/scisphere-web/static

http = 0.0.0.0:9000

#module=wsgi:application
module=scisphere-web.wsgi:application

pidfile = /opt/scisphere/prod/scisphere-prod-master1.pid

logformat = %(ftime) %(addr) (%(proto) %(status)) %(method) %(uri) : Retned %(size) bytes in %(msecs) msecs to %(uagent)
log-prefix = @(exec:///bin/date +%%F-%%H-%%M-%%S)
#log-prefix=@(exec:///bin/date +%%F-%%H-%%M-%%S)
logto=/var/log/uwsgi.log
daemonize = /var/log/uwsgi-sci-prod-@(exec://date +%%Y-%%m-%%d).log
log-reopen = true
log_num = 50

#ADDED
harakiri = 220 #5000 #30000 #1000 #10000         #; Forcefully kill workers after 60 seconds
master = true
enable-threads = true
vacuum = true                        #; Delete sockets during shutdown
single-interpreter = true
die-on-term = true                   #; Shutdown when receiving SIGTERM (default is respawn)
need-app = true

http-timeout = 3600 #3600000

#disable-logging = true               ; Disable built-in logging
#log-4xx = true                       ; but log 4xx's anyway
#log-5xx = true                       ; and 5xx's


max-requests = 200                  #; Restart workers after this many requests
max-worker-lifetime = 36000           #; Restart workers after this many seconds
reload-on-rss = 2048                 #; Restart workers after this much resident memory
worker-reload-mercy = 30000 #3000            #; How long to wait before forcefully killing workers

#LOG Size:
log-maxsize : 2000000

# Directory for demo purposes
uwsgi-directory = /opt/uwsgilog

# Destination for rotated log
log-backupname = %(uwsgi-directory)/logs/uwsgi.log.rotated

log-master = true
log-reopen = true

log-master-bufsize = 10000000
buffer-size=32768000

# Cron to trigger log rotation each hour
#cron2 = hour=-1,minute=0,unique=1 echo L > %(master-fifo) && sleep 5 && mv %(log-backupname) %(logto).$(/bin/date -u -d '-1 hour' +%%Y-%%m-%%d-%%H)
#logto = /var/log/%(log_prefix)@(exec://date +%%Y-%%m-%%d).log
#unique-cron = 15 3 -1 -1 -1 { sleep 66 && kill -HUP $(cat %(pidfile)) && ls -tp %(log_dir)/%(log_prefix)* | grep -v '/$' | tail -n +%(log_num)  | xargs -d '\n' -r rm --; } &
#stats = 127.0.0.1:9876
#processes = 10
#threads = 2

workers = 10

